if(state.in[t]==0){
beliefs[t]<- rho*beliefs[t-1]}
else
{beliefs[t]<- xse[t]}
xf_u<-fmt.u.forecast(beliefs[1:t],state.in[1:t],.13,rho,.42,2)
fmt.beliefs[t]<-xf_u
state.in[t+1]<-fmt.decision(xf_u, -5)
}
plot(fmt.beliefs+in.meanpay, type="l",lwd=2,ylim=c(50,300))
lines(xse+in.meanpay, col="red")
abline(h=pay.out)
source("jarabe.R")
pay.out<-195
in.meanpay<-200
n<-240
rho<-.85
ser<-8
p1<-seq(n)
epsi<-rnorm(n)*ser
xini<-0
xse[1]<-xini
for(i in seq(2,n)){
xse[i] = rho*xse[i-1]  + epsi[i]
}
xf<-fmt.o.forecast(xse,.13,rho,.42,2)
plot(xse+in.meanpay, type="l",lwd=2)
lines(c(NA,NA,NA,NA,xf+in.meanpay),col="red",lty=2)
abline(h=pay.out)
## We analyze whether player following FMT decides IN or OUT
state.in<-rep(NA,length(xse))
state.in[1:4]<-1
beliefs<-rep(NA,length(xse)) #this vector fills the missing values with the RE belief
fmt.beliefs<-rep(NA,length(xse)) #this vector stores FMT beliefs
beliefs[1:4]<-xse[1:4]
fmt.beliefs[1:4]<-xse[1:4]
for(t in seq(4,(length(xse)-1))){
if(state.in[t]==0){
beliefs[t]<- rho*beliefs[t-1]}
else
{beliefs[t]<- xse[t]}
xf_u<-fmt.u.forecast(beliefs[1:t],state.in[1:t],.13,rho,.42,2)
fmt.beliefs[t]<-xf_u
state.in[t+1]<-fmt.decision(xf_u, -5)
}
plot(fmt.beliefs+in.meanpay, type="l",lwd=2,ylim=c(100,300))
lines(xse+in.meanpay, col="red")
abline(h=pay.out)
source("jarabe.R")
pay.out<-195
in.meanpay<-200
n<-240
rho<-.85
ser<-8
p1<-seq(n)
epsi<-rnorm(n)*ser
xini<-0
xse[1]<-xini
for(i in seq(2,n)){
xse[i] = rho*xse[i-1]  + epsi[i]
}
xf<-fmt.o.forecast(xse,.13,rho,.42,2)
plot(xse+in.meanpay, type="l",lwd=2)
lines(c(NA,NA,NA,NA,xf+in.meanpay),col="red",lty=2)
abline(h=pay.out)
## We analyze whether player following FMT decides IN or OUT
state.in<-rep(NA,length(xse))
state.in[1:4]<-1
beliefs<-rep(NA,length(xse)) #this vector fills the missing values with the RE belief
fmt.beliefs<-rep(NA,length(xse)) #this vector stores FMT beliefs
beliefs[1:4]<-xse[1:4]
fmt.beliefs[1:4]<-xse[1:4]
for(t in seq(4,(length(xse)-1))){
if(state.in[t]==0){
beliefs[t]<- rho*beliefs[t-1]}
else
{beliefs[t]<- xse[t]}
xf_u<-fmt.u.forecast(beliefs[1:t],state.in[1:t],.13,rho,.42,2)
fmt.beliefs[t]<-xf_u
state.in[t+1]<-fmt.decision(xf_u, -5)
}
plot(fmt.beliefs+in.meanpay, type="l",lwd=2,ylim=c(150,300))
lines(xse+in.meanpay, col="red")
abline(h=pay.out)
source("jarabe.R")
pay.out<-195
in.meanpay<-200
n<-240
rho<-.85
ser<-8
p1<-seq(n)
epsi<-rnorm(n)*ser
xini<-0
xse[1]<-xini
for(i in seq(2,n)){
xse[i] = rho*xse[i-1]  + epsi[i]
}
xf<-fmt.o.forecast(xse,.13,rho,.42,2)
plot(xse+in.meanpay, type="l",lwd=2)
lines(c(NA,NA,NA,NA,xf+in.meanpay),col="red",lty=2)
abline(h=pay.out)
## We analyze whether player following FMT decides IN or OUT
state.in<-rep(NA,length(xse))
state.in[1:4]<-1
beliefs<-rep(NA,length(xse)) #this vector fills the missing values with the RE belief
fmt.beliefs<-rep(NA,length(xse)) #this vector stores FMT beliefs
beliefs[1:4]<-xse[1:4]
fmt.beliefs[1:4]<-xse[1:4]
for(t in seq(4,(length(xse)-1))){
if(state.in[t]==0){
beliefs[t]<- rho*beliefs[t-1]}
else
{beliefs[t]<- xse[t]}
xf_u<-fmt.u.forecast(beliefs[1:t],state.in[1:t],.13,rho,.42,2)
fmt.beliefs[t]<-xf_u
state.in[t+1]<-fmt.decision(xf_u, -5)
}
plot(fmt.beliefs+in.meanpay, type="l",lwd=2,ylim=c(150,250))
lines(xse+in.meanpay, col="red")
abline(h=pay.out)
source("jarabe.R")
pay.out<-195
in.meanpay<-200
n<-240
rho<-.85
ser<-8
p1<-seq(n)
epsi<-rnorm(n)*ser
xini<-0
xse[1]<-xini
for(i in seq(2,n)){
xse[i] = rho*xse[i-1]  + epsi[i]
}
xf<-fmt.o.forecast(xse,.13,rho,.42,2)
plot(xse+in.meanpay, type="l",lwd=2)
lines(c(NA,NA,NA,NA,xf+in.meanpay),col="red",lty=2)
abline(h=pay.out)
## We analyze whether player following FMT decides IN or OUT
state.in<-rep(NA,length(xse))
state.in[1:4]<-1
beliefs<-rep(NA,length(xse)) #this vector fills the missing values with the RE belief
fmt.beliefs<-rep(NA,length(xse)) #this vector stores FMT beliefs
beliefs[1:4]<-xse[1:4]
fmt.beliefs[1:4]<-xse[1:4]
for(t in seq(4,(length(xse)-1))){
if(state.in[t]==0){
beliefs[t]<- rho*beliefs[t-1]}
else
{beliefs[t]<- xse[t]}
xf_u<-fmt.u.forecast(beliefs[1:t],state.in[1:t],.13,rho,.42,2)
fmt.beliefs[t]<-xf_u
state.in[t+1]<-fmt.decision(xf_u, -5)
}
plot(fmt.beliefs+in.meanpay, type="l",lwd=2,ylim=c(150,250))
lines(xse+in.meanpay, col="red")
abline(h=pay.out)
source("jarabe.R")
pay.out<-195
in.meanpay<-200
n<-240
rho<-.85
ser<-8
p1<-seq(n)
epsi<-rnorm(n)*ser
xini<-0
xse[1]<-xini
source("jarabe.R")
pay.out<-195
in.meanpay<-200
n<-240
rho<-.85
ser<-8
p1<-seq(n)
epsi<-rnorm(n)*ser
xini<-0
xse<-rep(NA,n)
xse[1]<-xini
for(i in seq(2,n)){
xse[i] = rho*xse[i-1]  + epsi[i]
}
xf<-fmt.o.forecast(xse,.13,rho,.42,2)
plot(xse+in.meanpay, type="l",lwd=2)
lines(c(NA,NA,NA,NA,xf+in.meanpay),col="red",lty=2)
abline(h=pay.out)
## We analyze whether player following FMT decides IN or OUT
state.in<-rep(NA,length(xse))
state.in[1:4]<-1
beliefs<-rep(NA,length(xse)) #this vector fills the missing values with the RE belief
fmt.beliefs<-rep(NA,length(xse)) #this vector stores FMT beliefs
beliefs[1:4]<-xse[1:4]
fmt.beliefs[1:4]<-xse[1:4]
for(t in seq(4,(length(xse)-1))){
if(state.in[t]==0){
beliefs[t]<- rho*beliefs[t-1]}
else
{beliefs[t]<- xse[t]}
xf_u<-fmt.u.forecast(beliefs[1:t],state.in[1:t],.13,rho,.42,2)
fmt.beliefs[t]<-xf_u
state.in[t+1]<-fmt.decision(xf_u, -5)
}
plot(fmt.beliefs+in.meanpay, type="l",lwd=2,ylim=c(150,250))
lines(xse+in.meanpay, col="red")
abline(h=pay.out)
source("jarabe.R")
pay.out<-195
in.meanpay<-200
n<-240
rho<-.85
ser<-8
p1<-seq(n)
epsi<-rnorm(n)*ser
xini<-0
xse<-rep(NA,n)
xse[1]<-xini
for(i in seq(2,n)){
xse[i] = rho*xse[i-1]  + epsi[i]
}
xf<-fmt.o.forecast(xse,.13,rho,.42,2)
plot(xse+in.meanpay, type="l",lwd=2)
lines(c(NA,NA,NA,NA,xf+in.meanpay),col="red",lty=2)
abline(h=pay.out)
## We analyze whether player following FMT decides IN or OUT
state.in<-rep(NA,length(xse))
state.in[1:4]<-1
beliefs<-rep(NA,length(xse)) #this vector fills the missing values with the RE belief
fmt.beliefs<-rep(NA,length(xse)) #this vector stores FMT beliefs
beliefs[1:4]<-xse[1:4]
fmt.beliefs[1:4]<-xse[1:4]
for(t in seq(4,(length(xse)-1))){
if(state.in[t]==0){
beliefs[t]<- rho*beliefs[t-1]}
else
{beliefs[t]<- xse[t]}
xf_u<-fmt.u.forecast(beliefs[1:t],state.in[1:t],.13,rho,.42,2)
fmt.beliefs[t]<-xf_u
state.in[t+1]<-fmt.decision(xf_u, -5)
}
plot(fmt.beliefs+in.meanpay, type="l",lwd=2,ylim=c(150,250))
lines(xse+in.meanpay, col="red")
abline(h=pay.out)
source("jarabe.R")
pay.out<-195
in.meanpay<-200
n<-240
rho<-.85
ser<-8
p1<-seq(n)
epsi<-rnorm(n)*ser
xini<-0
xse<-rep(NA,n)
xse[1]<-xini
for(i in seq(2,n)){
xse[i] = rho*xse[i-1]  + epsi[i]
}
xf<-fmt.o.forecast(xse,.13,rho,.42,2)
plot(xse+in.meanpay, type="l",lwd=2)
lines(c(NA,NA,NA,NA,xf+in.meanpay),col="red",lty=2)
abline(h=pay.out)
## We analyze whether player following FMT decides IN or OUT
state.in<-rep(NA,length(xse))
state.in[1:4]<-1
beliefs<-rep(NA,length(xse)) #this vector fills the missing values with the RE belief
fmt.beliefs<-rep(NA,length(xse)) #this vector stores FMT beliefs
beliefs[1:4]<-xse[1:4]
fmt.beliefs[1:4]<-xse[1:4]
for(t in seq(4,(length(xse)-1))){
if(state.in[t]==0){
beliefs[t]<- rho*beliefs[t-1]}
else
{beliefs[t]<- xse[t]}
xf_u<-fmt.u.forecast(beliefs[1:t],state.in[1:t],.13,rho,.42,2)
fmt.beliefs[t]<-xf_u
state.in[t+1]<-fmt.decision(xf_u, -5)
}
plot(fmt.beliefs+in.meanpay, type="l",lwd=2,ylim=c(150,250))
lines(xse+in.meanpay, col="red")
abline(h=pay.out)
source("jarabe.R")
pay.out<-195
in.meanpay<-200
n<-240
rho<-.85
ser<-8
p1<-seq(n)
epsi<-rnorm(n)*ser
xini<-0
xse<-rep(NA,n)
xse[1]<-xini
for(i in seq(2,n)){
xse[i] = rho*xse[i-1]  + epsi[i]
}
xf<-fmt.o.forecast(xse,.13,rho,.42,2)
plot(xse+in.meanpay, type="l",lwd=2)
lines(c(NA,NA,NA,NA,xf+in.meanpay),col="red",lty=2)
abline(h=pay.out)
## We analyze whether player following FMT decides IN or OUT
state.in<-rep(NA,length(xse))
state.in[1:4]<-1
beliefs<-rep(NA,length(xse)) #this vector fills the missing values with the RE belief
fmt.beliefs<-rep(NA,length(xse)) #this vector stores FMT beliefs
beliefs[1:4]<-xse[1:4]
fmt.beliefs[1:4]<-xse[1:4]
for(t in seq(4,(length(xse)-1))){
if(state.in[t]==0){
beliefs[t]<- rho*beliefs[t-1]}
else
{beliefs[t]<- xse[t]}
xf_u<-fmt.u.forecast(beliefs[1:t],state.in[1:t],.13,rho,.42,2)
fmt.beliefs[t]<-xf_u
state.in[t+1]<-fmt.decision(xf_u, -5)
}
plot(fmt.beliefs+in.meanpay, type="l",lwd=2,ylim=c(150,250))
lines(xse+in.meanpay, col="red")
abline(h=pay.out)
dim(state.in)
length(state.in)
sum(state.in==0)
source("jarabe.R")
pay.out<-195
in.meanpay<-200
n<-240
rho<-.85
ser<-8
p1<-seq(n)
epsi<-rnorm(n)*ser
xini<-0
xse<-rep(NA,n)
xse[1]<-xini
for(i in seq(2,n)){
xse[i] = rho*xse[i-1]  + epsi[i]
}
xf<-fmt.o.forecast(xse,.13,rho,.42,2)
plot(xse+in.meanpay, type="l",lwd=2)
lines(c(NA,NA,NA,NA,xf+in.meanpay),col="red",lty=2)
abline(h=pay.out)
## We analyze whether player following FMT decides IN or OUT
state.in<-rep(NA,length(xse))
state.in[1:4]<-1
beliefs<-rep(NA,length(xse)) #this vector fills the missing values with the RE belief
fmt.beliefs<-rep(NA,length(xse)) #this vector stores FMT beliefs
beliefs[1:4]<-xse[1:4]
fmt.beliefs[1:4]<-xse[1:4]
for(t in seq(4,(length(xse)-1))){
if(state.in[t]==0){
beliefs[t]<- rho*beliefs[t-1]}
else
{beliefs[t]<- xse[t]}
xf_u<-fmt.u.forecast(beliefs[1:t],state.in[1:t],.13,rho,.42,2)
fmt.beliefs[t]<-xf_u
state.in[t+1]<-fmt.decision(xf_u, -5)
}
sum(state.in==0)
plot(fmt.beliefs+in.meanpay, type="l",lwd=2,ylim=c(150,250))
lines(xse+in.meanpay, col="red")
abline(h=pay.out)
sum(state.in==0)
source('~/Desktop/jotarepos/inoutrab/run_fmtsimu.R', echo=TRUE)
hist(totalper.out)
source('~/Desktop/jotarepos/inoutrab/run_fmtsimu.R', echo=TRUE)
source('~/Desktop/jotarepos/inoutrab/run_fmtsimu.R', echo=TRUE)
60*.33
source("jarabe.R")
pay.out<-195
in.meanpay<-200
n<-240
rho<-.85
ser<-8
p1<-seq(n)
epsi<-rnorm(n)*ser
xini<-0
xse<-rep(NA,n)
xse[1]<-xini
for(i in seq(2,n)){
xse[i] = rho*xse[i-1]  + epsi[i]
}
xf<-fmt.o.forecast(xse,.13,rho,.42,2)
plot(xse+in.meanpay, type="l",lwd=2)
lines(c(NA,NA,NA,NA,xf+in.meanpay),col="red",lty=2)
abline(h=pay.out)
## We analyze whether player following FMT decides IN or OUT
state.in<-rep(NA,length(xse))
state.in[1:4]<-1
beliefs<-rep(NA,length(xse)) #this vector fills the missing values with the RE belief
fmt.beliefs<-rep(NA,length(xse)) #this vector stores FMT beliefs
beliefs[1:4]<-xse[1:4]
fmt.beliefs[1:4]<-xse[1:4]
for(t in seq(4,(length(xse)-1))){
if(state.in[t]==0){
beliefs[t]<- rho*beliefs[t-1]}
else
{beliefs[t]<- xse[t]}
xf_u<-fmt.u.forecast(beliefs[1:t],state.in[1:t],.13,rho,.42,2)
fmt.beliefs[t]<-xf_u
state.in[t+1]<-fmt.decision(xf_u, -5)
}
count.out<-sum(state.in==0)
plot(fmt.beliefs+in.meanpay, type="l",lwd=2,ylim=c(0,150))
lines(xse+in.meanpay, col="red")
abline(h=pay.out)
source("jarabe.R")
pay.out<-95
in.meanpay<-100
n<-240
rho<-.85
ser<-8
p1<-seq(n)
epsi<-rnorm(n)*ser
xini<-0
xse<-rep(NA,n)
xse[1]<-xini
for(i in seq(2,n)){
xse[i] = rho*xse[i-1]  + epsi[i]
}
xf<-fmt.o.forecast(xse,.13,rho,.42,2)
plot(xse+in.meanpay, type="l",lwd=2)
lines(c(NA,NA,NA,NA,xf+in.meanpay),col="red",lty=2)
abline(h=pay.out)
## We analyze whether player following FMT decides IN or OUT
state.in<-rep(NA,length(xse))
state.in[1:4]<-1
beliefs<-rep(NA,length(xse)) #this vector fills the missing values with the RE belief
fmt.beliefs<-rep(NA,length(xse)) #this vector stores FMT beliefs
beliefs[1:4]<-xse[1:4]
fmt.beliefs[1:4]<-xse[1:4]
for(t in seq(4,(length(xse)-1))){
if(state.in[t]==0){
beliefs[t]<- rho*beliefs[t-1]}
else
{beliefs[t]<- xse[t]}
xf_u<-fmt.u.forecast(beliefs[1:t],state.in[1:t],.13,rho,.42,2)
fmt.beliefs[t]<-xf_u
state.in[t+1]<-fmt.decision(xf_u, -5)
}
count.out<-sum(state.in==0)
plot(fmt.beliefs+in.meanpay, type="l",lwd=2,ylim=c(0,150))
lines(xse+in.meanpay, col="red")
abline(h=pay.out)
source("jarabe.R")
pay.out<-95
in.meanpay<-100
n<-240
rho<-.85
ser<-8
p1<-seq(n)
epsi<-rnorm(n)*ser
xini<-0
xse<-rep(NA,n)
xse[1]<-xini
for(i in seq(2,n)){
xse[i] = rho*xse[i-1]  + epsi[i]
}
xf<-fmt.o.forecast(xse,.13,rho,.42,2)
plot(xse+in.meanpay, type="l",lwd=2,ylim=c(0,150))
lines(c(NA,NA,NA,NA,xf+in.meanpay),col="red",lty=2)
abline(h=pay.out)
## We analyze whether player following FMT decides IN or OUT
state.in<-rep(NA,length(xse))
state.in[1:4]<-1
beliefs<-rep(NA,length(xse)) #this vector fills the missing values with the RE belief
fmt.beliefs<-rep(NA,length(xse)) #this vector stores FMT beliefs
beliefs[1:4]<-xse[1:4]
fmt.beliefs[1:4]<-xse[1:4]
for(t in seq(4,(length(xse)-1))){
if(state.in[t]==0){
beliefs[t]<- rho*beliefs[t-1]}
else
{beliefs[t]<- xse[t]}
xf_u<-fmt.u.forecast(beliefs[1:t],state.in[1:t],.13,rho,.42,2)
fmt.beliefs[t]<-xf_u
state.in[t+1]<-fmt.decision(xf_u, -5)
}
count.out<-sum(state.in==0)
plot(fmt.beliefs+in.meanpay, type="l",lwd=2,ylim=c(0,150))
lines(xse+in.meanpay, col="red")
abline(h=pay.out)
source("jarabe.R")
pay.out<-95
in.meanpay<-100
n<-240
rho<-.85
ser<-8
p1<-seq(n)
epsi<-rnorm(n)*ser
xini<-0
xse<-rep(NA,n)
xse[1]<-xini
for(i in seq(2,n)){
xse[i] = rho*xse[i-1]  + epsi[i]
}
xf<-fmt.o.forecast(xse,.13,rho,.42,2)
plot(xse+in.meanpay, type="l",lwd=2,ylim=c(0,150))
lines(c(NA,NA,NA,NA,xf+in.meanpay),col="red",lty=2)
abline(h=pay.out)
## We analyze whether player following FMT decides IN or OUT
state.in<-rep(NA,length(xse))
state.in[1:4]<-1
beliefs<-rep(NA,length(xse)) #this vector fills the missing values with the RE belief
fmt.beliefs<-rep(NA,length(xse)) #this vector stores FMT beliefs
beliefs[1:4]<-xse[1:4]
fmt.beliefs[1:4]<-xse[1:4]
for(t in seq(4,(length(xse)-1))){
if(state.in[t]==0){
beliefs[t]<- rho*beliefs[t-1]}
else
{beliefs[t]<- xse[t]}
xf_u<-fmt.u.forecast(beliefs[1:t],state.in[1:t],.13,rho,.42,2)
fmt.beliefs[t]<-xf_u
state.in[t+1]<-fmt.decision(xf_u, -5)
}
count.out<-sum(state.in==0)
plot(fmt.beliefs+in.meanpay, type="l",lwd=2,ylim=c(0,150))
lines(xse+in.meanpay, col="red")
abline(h=pay.out)
